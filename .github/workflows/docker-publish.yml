name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - Rewrite
      - dev
  pull_request:
    branches:
      - main
      - Rewrite
      - dev

env:
  DOCKER_IMAGE: dumbwareio/dumbkan
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Set Docker tags
      - name: Set Docker tags
        id: docker_meta
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "DOCKER_TAGS=${DOCKER_IMAGE}:latest" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/Rewrite" ]; then
            echo "DOCKER_TAGS=${DOCKER_IMAGE}:rewrite" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            # Generate timestamp in format YYYYMMDD-HHMMSS
            TIMESTAMP=$(date -u +"%Y%m%d-%H%M%S")
            # Set both the nightly tag and the timestamped nightly tag
            echo "DOCKER_TAGS=${DOCKER_IMAGE}:nightly,${DOCKER_IMAGE}:nightly-${TIMESTAMP}" >> $GITHUB_ENV
          fi

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_TAGS }}
          platforms: ${{ env.PLATFORMS }}
