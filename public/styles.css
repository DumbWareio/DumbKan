:root {
    /* Light theme variables */
    --primary: #2196F3;
    --primary-hover: #1976D2;
    --background: #f5f5f5;
    --container: white;
    --text: #333;
    --border: #ccc;
    --shadow: 0 2px 4px rgba(0,0,0,0.1);
    --transition: 0.2s ease;
    --task-bg: #ffffff;
    --text-color: #2c3e50;
    --text-secondary: #546e7a;
    --priority-bg: #f5f5f5;
    --priority-text: #616161;
    --priority-high-bg: #ffebee;
    --priority-high-text: #d32f2f;
    --priority-medium-bg: #fff3e0;
    --priority-medium-text: #f57c00;
    --priority-low-bg: #e8f5e9;
    --priority-low-text: #388e3c;
    --assignee-bg: #e3f2fd;
    --assignee-text: #1976d2;
    --tag-bg: #f3e5f5;
    --tag-text: #7b1fa2;
    --priority-urgent-bg: #ffcdd2;
    --priority-urgent-text: #c62828;
    /* Status colors */
    --status-open-bg: #e3f2fd;
    --status-open-text: #1976d2;
    --status-in-progress-bg: #fff3e0;
    --status-in-progress-text: #f57c00;
    --status-blocked-bg: #ffebee;
    --status-blocked-text: #d32f2f;
    --status-completed-bg: #e8f5e9;
    --status-completed-text: #388e3c;
    --status-cancelled-bg: #f5f5f5;
    --status-cancelled-text: #616161;
    --status-active-bg: #e8f5e9;
    --status-active-text: #388e3c;
    --status-inactive-bg: #f5f5f5;
    --status-inactive-text: #616161;
}

[data-theme="dark"] {
    --background: #1a1a1a;
    --container: #2d2d2d;
    --text: white;
    --border: #404040;
    --shadow: 0 2px 4px rgba(0,0,0,0.2);
    --task-bg: #2d3748;
    --text-color: #e2e8f0;
    --text-secondary: #a0aec0;
    --priority-bg: #4a5568;
    --priority-text: #e2e8f0;
    --priority-high-bg: #742a2a;
    --priority-high-text: #feb2b2;
    --priority-medium-bg: #744210;
    --priority-medium-text: #fbd38d;
    --priority-low-bg: #22543d;
    --priority-low-text: #9ae6b4;
    --assignee-bg: #2a4365;
    --assignee-text: #90cdf4;
    --tag-bg: #44337a;
    --tag-text: #d6bcfa;
    --priority-urgent-bg: #b71c1c;
    --priority-urgent-text: #ffcdd2;
    /* Status colors for dark theme */
    --status-open-bg: #2a4365;
    --status-open-text: #90cdf4;
    --status-in-progress-bg: #744210;
    --status-in-progress-text: #fbd38d;
    --status-blocked-bg: #742a2a;
    --status-blocked-text: #feb2b2;
    --status-completed-bg: #22543d;
    --status-completed-text: #9ae6b4;
    --status-cancelled-bg: #4a5568;
    --status-cancelled-text: #e2e8f0;
    --status-active-bg: rgba(56, 142, 60, 0.2);
    --status-active-text: #81c784;
    --status-inactive-bg: rgba(97, 97, 97, 0.2);
    --status-inactive-text: #9e9e9e;
}

/* Base styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    background: var(--background);
    color: var(--text);
    transition: background var(--transition), color var(--transition);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

/* Main content */
main {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
}

/* Container styling */
.container {
    position: relative;
    background: var(--container);
    padding: 3rem 1.5rem 2rem;
    border-radius: 12px;
    box-shadow: var(--shadow);
    width: calc(100% - 2rem);
    max-width: 99%;
    min-height: calc(100vh - 4rem);
    transition: background var(--transition), box-shadow var(--transition);
    margin: 1rem auto;
    overflow: hidden;
}

/* Form styling */
form {
    position: relative;
    background: var(--container);
    padding: 3rem 1.5rem 2rem;
    border-radius: 12px;
    box-shadow: var(--shadow);
    width: calc(100% - 2rem);
    max-width: 400px;
    transition: background var(--transition), box-shadow var(--transition);
    text-align: center;
    margin: 1rem auto;
    transform: translateY(-10%);
}

/* Theme toggle */
#themeToggle {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: background-color var(--transition);
}

#themeToggle:hover {
    background: rgba(128, 128, 128, 0.1);
}

#themeToggle svg {
    width: 24px;
    height: 24px;
    stroke: var(--text);
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    transition: stroke var(--transition);
}

[data-theme="light"] .moon {
    display: block;
}

[data-theme="light"] .sun {
    display: none;
}

[data-theme="dark"] .moon {
    display: none;
}

[data-theme="dark"] .sun {
    display: block;
}

/* Headings */
h1 {
    font-size: 2rem;
    font-weight: 500;
    margin-bottom: 0.75rem;
    color: var(--text);
    text-align: center;
}

h2 {
    font-size: 0.875rem;
    font-weight: 400;
    margin-bottom: 2rem;
    color: var(--text);
    opacity: 0.7;
    text-align: center;
}

/* PIN input styling */
.pin-input-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    justify-content: center;
    margin: 2rem 0;
    padding: 0 0.5rem;
}

.pin-input-container input.pin-input {
    width: 44px;
    height: 44px;
    text-align: center;
    font-size: 1.25rem;
    font-weight: 500;
    border: 2px solid var(--border);
    border-radius: 12px;
    background: var(--container);
    color: var(--text);
    transition: all var(--transition);
    -webkit-appearance: none;
    -moz-appearance: textfield;
    appearance: none;
}

.pin-input-container input.pin-input::-webkit-outer-spin-button,
.pin-input-container input.pin-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.pin-input-container input.pin-input:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.15);
}

.pin-input-container input.pin-input.has-value {
    border-color: var(--primary);
    background-color: var(--primary);
    color: white;
}

.pin-error {
    color: #ff4444;
    font-size: 0.9rem;
    margin-top: 0.5rem;
    text-align: center;
    display: none;
    opacity: 0;
    transform: translateY(-10px);
    transition: opacity var(--transition), transform var(--transition);
}

.pin-error[aria-hidden="false"] {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

/* Credit styling */
.dumbware-credit {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    text-align: center;
    font-size: 0.75em;
    opacity: 0;
    padding: 8px;
    background: var(--background);
    z-index: 100;
    pointer-events: none;
    margin: 0;
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    transform: translateY(100%);
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.dumbware-credit.visible {
    opacity: 0.5;
    transform: translateY(0);
}

.dumbware-credit a {
    color: inherit;
    text-decoration: none;
    pointer-events: auto;
}

.dumbware-credit a:hover {
    text-decoration: underline;
    opacity: 0.8;
}

/* Responsive adjustments */
@media (max-width: 400px) {
    form, .container {
        padding: 3rem 0.75rem 1.5rem;
        width: calc(100% - 1rem);
        margin: 0.5rem auto;
    }

    .pin-input-container {
        gap: 0.4rem;
        padding: 0;
    }

    .pin-input-container input.pin-input {
        width: 36px;
        height: 36px;
        font-size: 1rem;
        border-radius: 8px;
    }

    h1 {
        font-size: 1.75rem;
    }
}

@media (max-width: 320px) {
    .pin-input-container input.pin-input {
        width: 32px;
        height: 32px;
    }
}

/* Board Header */
.board-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    flex-wrap: wrap;
    position: relative;
    padding: 0.5rem;
}

.app-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--text);
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
}

.board-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex: 1;
    justify-content: flex-start;
}

.board-selector h1 {
    font-size: 1.25rem;
    margin: 0;
    text-align: left;
}

#boardMenuBtn {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    color: var(--text);
    opacity: 0.6;
    transition: opacity var(--transition);
    display: flex;
    align-items: center;
    justify-content: center;
}

#boardMenuBtn:hover {
    opacity: 1;
}

#boardMenuBtn svg {
    width: 24px;
    height: 24px;
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
}

/* Board Menu */
.board-menu {
    position: absolute;
    top: 4rem;
    left: 1rem;
    background: var(--container);
    border: 1px solid var(--border);
    border-radius: 8px;
    box-shadow: var(--shadow);
    min-width: 180px;
    z-index: 100;
}

.menu-header {
    padding: 0.75rem;
    border-bottom: 1px solid var(--border);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.menu-header h3 {
    font-size: 0.875rem;
    font-weight: 500;
    margin: 0;
}

.board-list {
    list-style: none;
    padding: 0.25rem 0;
    max-height: 200px;
    overflow-y: auto;
}

.board-list li {
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    transition: background var(--transition);
    font-size: 0.875rem;
}

.board-list li:hover {
    background: rgba(128, 128, 128, 0.1);
}

.board-list li.active {
    background: var(--primary);
    color: white;
}

/* Board container */
.board-container {
    overflow-x: auto;
    padding: 0.5rem;
    margin: 0;
    width: 100%;
    height: calc(100vh - 10rem);
    -webkit-overflow-scrolling: touch;
}

/* Columns container */
.columns {
    display: flex;
    gap: 1rem;
    min-height: 70vh;
    padding: 0.2rem;
    align-items: flex-start;
    width: max-content;
}

/* Add Column Button */
.add-column-btn {
    flex: 0 0 60px;
    height: calc(70vh - 1rem);
    margin: 0;
    background: var(--background);
    border: 2px dashed var(--border);
    border-radius: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition);
    padding: 0;
    color: var(--text);
    opacity: 0.6;
    margin-top: 0;
}

.add-column-btn:hover {
    opacity: 1;
    border-color: var(--primary);
    color: var(--primary);
    background: rgba(33, 150, 243, 0.1);
    width: 64px;
}

.add-column-btn svg {
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    width: 20px;
    height: 20px;
}

/* Column styling */
.column {
    flex: 0 0 300px;
    background: var(--background);
    border-radius: 12px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    max-height: 100%;
    position: relative;
    transition: transform 0.2s ease, border 0.2s ease;
    width: 300px;
    cursor: grab;
    z-index: 1;
}

.column-header {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    padding: 0.5rem;
    padding-right: 2.5rem;
    gap: 0.5rem;
    cursor: grab;
    justify-content: flex-start;
    background: var(--task-bg);
    border-bottom: 1px solid var(--border);
    border-radius: 8px 8px 0 0;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    position: relative;
    z-index: 2;
}

.column-header.dragging {
    cursor: grabbing;
    opacity: 0.9;
    transform: scale(1.02);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
}

.column.column-drag-over {
    border: 2px dashed var(--primary);
}

.column-title {
    font-weight: 500;
    font-size: 1rem;
    color: var(--text);
    display: inline-block;
    max-width: fit-content;
    flex: 0 1 auto;
}

.column-count {
    background: rgba(128, 128, 128, 0.2);
    width: 24px;
    height: 24px;
    border-radius: 50%;
    font-size: 0.875rem;
    color: var(--text);
    flex-shrink: 0;
    order: -1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    aspect-ratio: 1;
    line-height: 1;
    text-align: center;
}

.tasks {
    flex: 1;
    overflow-y: auto;
    padding: 0.5rem;
    min-height: 50px;
    max-height: calc(100vh - 15rem);
    -webkit-overflow-scrolling: touch;
}

/* Task styling */
.task {
    position: relative;
    background: var(--container);
    border-radius: 8px;
    padding: 8px;
    margin-bottom: 8px;
    cursor: grab;
    transition: box-shadow var(--transition);
    border: 1px solid var(--border);
    display: flex;
    min-height: 60px;
    padding-right: 32px;
    user-select: none;
    -webkit-user-select: none;
}

.task-content-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 4px;
    min-width: 0;
    position: relative;
    z-index: 2;
}

.task-title {
    margin: 0;
    font-size: 0.95rem;
    font-weight: 500;
    width: 100%;
}

.title-text {
    display: block;
    margin: 0;
    padding: 2px 4px;
    border-radius: 4px;
    transition: all var(--transition);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.task-badges {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 4px;
    margin: 2px 0;
    padding: 4px 6px;
    background-color: var(--background);
    border-radius: 6px;
    opacity: 0.9;
    width: fit-content;
}

[data-theme="light"] .task-badges {
    background-color: rgba(0, 0, 0, 0.03);
}

[data-theme="dark"] .task-badges {
    background-color: rgba(255, 255, 255, 0.03);
}

.task-content {
    display: flex;
    align-items: center;
    margin-top: 2px;
}

/* Task move button */
.task-move {
    width: 24px;
    position: absolute;
    right: -1px;
    bottom: -1px;
    height: auto;
    top: 40px;
    bottom: 0;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
    border: none;
    border-left: 1px solid var(--border);
    border-top-right-radius: 0;
    border-bottom-right-radius: 8px;
    cursor: pointer;
    color: var(--text);
    opacity: 0.4;
    transition: all var(--transition);
    z-index: 1;
}

.task-move:hover {
    opacity: 1;
    color: var(--primary);
    border-left-color: var(--primary);
    background: linear-gradient(to right, transparent, rgba(33, 150, 243, 0.1));
}

.task-move svg {
    position: absolute;
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    width: 16px;
    height: 16px;
    transition: transform var(--transition);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Task drag handle */
.task-drag-handle {
    position: absolute;
    top: 4px;
    right: 0px;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.4;
    transition: opacity var(--transition);
    cursor: grab;
    z-index: 10;
    background: transparent;
    border: none;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
}

.task-drag-handle:hover {
    opacity: 1;
}

.task.dragging {
    cursor: grabbing;
    opacity: 0.9;
    transform: scale(1.02);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
    z-index: 1000;
}

.task.dragging .task-drag-handle {
    cursor: grabbing;
    outline: none;
}

@media (max-width: 768px) {
    .board-header {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 0.5rem;
        position: relative;
        min-height: 5rem;
    }
    
    .app-title {
        font-size: 1.2rem;
        width: 100%;
        text-align: center;
        margin: 0;
        position: absolute;
        top: 0.5rem;
    }
    
    .board-selector {
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        padding-left: 0.5rem;
        position: absolute;
        top: 2.5rem;
    }

    .task {
        touch-action: auto;
        -webkit-touch-callout: none;
        user-select: none;
        -webkit-user-select: none;
    }

    .tasks {
        touch-action: pan-y;
    }

    .board-container {
        touch-action: pan-x pan-y;
    }

    .task-drag-handle {
        width: 32px;
        height: 32px;
        top: 4px;
        right: 0px;
        opacity: 0.8;
        touch-action: none;
        cursor: move;
        cursor: -webkit-grab;
        cursor: grab;
        z-index: 10;
        background: transparent !important;
        border: none;
        -webkit-tap-highlight-color: transparent;
        -webkit-touch-callout: none;
        user-select: none;
    }

    .task-drag-handle:active {
        background: transparent !important;
    }

    .task.dragging {
        opacity: 0.4; /* Lower opacity for the placeholder */
        pointer-events: none;
    }

    .task.dragging .task-drag-handle,
    .task.dragging .task-drag-handle:active {
        background: transparent !important;
    }

    .task.drag-clone {
        position: fixed;
        opacity: 0.9;
        transform: scale(1.02);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        width: 228px !important;
        min-height: 60px;
        pointer-events: none;
        background: var(--container);
        border-radius: 8px;
        padding: 8px;
        padding-right: 32px;
        border: 1px solid var(--border);
        display: flex;
    }

    .task.drag-clone .task-content-wrapper {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 4px;
        min-width: 0;
        position: relative;
        z-index: 2;
    }

    .task.drag-clone .task-drag-handle {
        position: absolute;
        top: 4px;
        right: 0px;
        width: 32px;
        height: 32px;
        cursor: -webkit-grabbing;
        cursor: grabbing;
        background: var(--primary);
        color: white;
        opacity: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
    }
}

@media (hover: none) {
    .task-drag-handle {
        opacity: 0.8;
        visibility: visible;
        -webkit-tap-highlight-color: transparent;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        user-select: none;
    }

    .task:not(.dragging):not(.drag-clone) .task-drag-handle:active {
        opacity: 1;
        background: var(--primary);
        color: white;
        transform: scale(0.95);
    }

    .task {
        -webkit-tap-highlight-color: transparent;
    }

    .task .priority-badge:active,
    .task .status-badge:active,
    .task .task-move:active {
        transform: scale(0.95);
    }

    .priority-badge,
    .status-badge {
        -webkit-tap-highlight-color: rgba(0,0,0,0);
    }
}

.task-title .priority-badge {
    flex-shrink: 0;
    width: 20px;
    height: 20px;
    font-size: 12px;
}

.badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    font-size: 0.75rem;
    font-weight: 500;
}

.calendar-badge {
    display: inline-flex;
    align-items: center;
    gap: 4px;
    position: relative;
}

.calendar-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0.6;
    padding: 2px 8px;
    border-radius: 10px;
    min-width: 20px;
    height: 20px;
    font-size: 0.75rem;
    transition: opacity var(--transition);
}

.calendar-icon:hover {
    opacity: 1;
}

.calendar-badge.has-due-date .calendar-icon {
    opacity: 0.8;
    background: var(--primary);
    color: var(--text-on-primary);
}

.calendar-badge.past-due .calendar-icon {
    background: var(--error, #ff4444);
    color: white;
    opacity: 0.8;
}

/* Hide calendar icon and badge styles when input is active */
.calendar-date-input:not([hidden]) ~ .calendar-icon,
.calendar-date-input:focus ~ .calendar-icon {
    display: none !important;
}

.calendar-date-input:not([hidden]) ~ .calendar-badge,
.calendar-date-input:focus ~ .calendar-badge {
    background: none !important;
}

.calendar-date-input {
    margin-left: 4px;
    padding: 2px 8px;
    border: 1px solid var(--border);
    border-radius: 4px;
    font-size: 0.75rem;
    background: var(--container);
    color: var(--text);
    width: 100px;
    user-select: all;
}

.calendar-date-input:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);
}

/* Remove old tray styles */
.calendar-date-tray {
    display: none;
}

/* Markdown styles */
.task-description h1, 
.task-description h2, 
.task-description h3, 
.task-description h4, 
.task-description h5, 
.task-description h6 {
    margin: 0.5em 0;
    color: var(--text);
    font-weight: 600;
    line-height: 1.3;
}

.task-description h1 { font-size: 1.4em; }
.task-description h2 { font-size: 1.3em; }
.task-description h3 { font-size: 1.2em; }
.task-description h4 { font-size: 1.1em; }
.task-description h5, 
.task-description h6 { font-size: 1em; }

.task-description p {
    margin: 0.5em 0;
}

.task-description ul,
.task-description ol {
    margin: 0.5em 0;
    padding-left: 1.5em;
}

.task-description li {
    margin: 0.25em 0;
}

.task-description code {
    background: var(--background);
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-size: 0.9em;
    font-family: monospace;
}

.task-description pre {
    background: var(--background);
    padding: 0.75em;
    border-radius: 4px;
    overflow-x: auto;
    margin: 0.5em 0;
}

.task-description pre code {
    background: none;
    padding: 0;
}

.task-description blockquote {
    margin: 0.5em 0;
    padding-left: 1em;
    border-left: 3px solid var(--border);
    color: var(--text-secondary);
}

.task-description hr {
    margin: 0.75em 0;
    border: none;
    border-top: 1px solid var(--border);
}

.task-description table {
    border-collapse: collapse;
    width: 100%;
    margin: 0.5em 0;
}

.task-description th,
.task-description td {
    border: 1px solid var(--border);
    padding: 0.4em 0.6em;
    text-align: left;
}

.task-description th {
    background: var(--background);
}

.task-description.editing {
    background: var(--background);
}

.task-description .inline-edit {
    width: 100%;
    min-height: 60px;
    padding: 8px;
    font-size: 0.875rem;
    line-height: 1.4;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--container);
    color: var(--text);
    resize: vertical;
}

.task-description .inline-edit:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);
    outline: none;
}

.task-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
    margin-top: 4px;
}

/* Remove hover highlight from task title */
.task-title:hover {
    background-color: transparent;
}

/* Only show hover effect when editing */
.task-title.editing {
    background-color: transparent;
}

.task-description.has-description {
    padding: 0.25rem;
    background: var(--container);
    border-radius: 4px;
    cursor: text;
}

/* Buttons */
.btn-primary {
    background: var(--primary);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: background var(--transition);
}

.btn-primary:hover {
    background: var(--primary-hover);
}

.btn-primary svg {
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
}

.btn-secondary {
    background: transparent;
    color: var(--text);
    border: 1px solid var(--border);
    padding: 0.5rem 1rem;
    border-radius: 8px;
    cursor: pointer;
    transition: background var(--transition);
}

.btn-secondary:hover {
    background: rgba(128, 128, 128, 0.1);
}

.btn-text {
    background: none;
    border: none;
    color: var(--primary);
    padding: 0.5rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    transition: opacity var(--transition);
}

.btn-text:hover {
    opacity: 0.8;
}

.btn-text svg {
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
}

/* Modal */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: flex-end;  /* Changed from center to flex-end */
    justify-content: center;
    z-index: 1000;
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
}

.modal[hidden] {
    display: none;
}

.modal-content {
    background: var(--container);
    border-radius: 12px 12px 0 0;  /* Rounded only on top corners */
    padding: 2rem;
    width: 100%;  /* Full width on mobile */
    max-width: 600px;  /* Slightly wider for better form layout */
    position: relative;
    box-shadow: var(--shadow);
    animation: modalSlideUp 0.3s ease;
    max-height: 85vh;  /* Maximum height */
    overflow-y: auto;  /* Enable scrolling if content is too tall */
}

@keyframes modalSlideUp {
    from {
        transform: translateY(100%);
        opacity: 0.5;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Add slide down animation for closing */
@keyframes modalSlideDown {
    from {
        transform: translateY(0);
        opacity: 1;
    }
    to {
        transform: translateY(100%);
        opacity: 0.5;
    }
}

.modal.closing .modal-content {
    animation: modalSlideDown 0.3s ease forwards;
}

/* Add a drag handle at the top of the modal */
.modal-drag-handle {
    position: absolute;
    top: 0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 40px;
    height: 4px;
    background: var(--border);
    border-radius: 2px;
    cursor: grab;
}

.modal-drag-handle:active {
    cursor: grabbing;
}

/* Adjust the close button position */
.modal-close {
    position: absolute;
    top: 1.5rem;  /* Moved down slightly to account for drag handle */
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text);
    opacity: 0.6;
    transition: all var(--transition);
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    z-index: 1;
}

.modal-close:hover {
    opacity: 1;
    background: rgba(128, 128, 128, 0.1);
}

/* Adjust modal title spacing */
.modal h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 2rem;
    color: var(--text);
    opacity: 1;
    text-align: left;
    padding-right: 2rem;
    margin-top: 0.5rem;  /* Add space for the drag handle */
    padding-top: 1rem;
}

.modal form {
    background: none;
    padding: 0;
    box-shadow: none;
    width: 100%;
    max-width: 100%;
    margin: 0;
    transform: none;
}

.modal .form-group {
    margin-bottom: 1.5rem;
}

.modal label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--text);
}

.modal input,
.modal textarea {
    width: 100%;
    padding: 0.75rem 1rem;
    margin-bottom: 0;
    border: 1px solid var(--border);
    border-radius: 8px;
    background: var(--background);
    color: var(--text);
    font-family: inherit;
    font-size: 1rem;
    transition: all var(--transition);
}

.modal input:hover,
.modal textarea:hover {
    border-color: var(--primary);
}

.modal input:focus,
.modal textarea:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.15);
}

.modal textarea {
    min-height: 120px;
    resize: vertical;
    line-height: 1.5;
    white-space: pre-wrap;
    font-family: inherit;
}

.modal-actions {
    display: flex;
    justify-content: space-between;
    gap: 0.75rem;
    margin-top: 1.5rem;
}

.modal-actions .btn-delete {
    position: relative;
    background: #ff4444;
    color: white;
    border: none;
    padding: 0.75rem 1.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    border-radius: 8px;
    transition: all var(--transition);
    overflow: hidden;
    cursor: pointer;
}

.modal-actions .btn-delete:hover {
    background: #ff1111;
}

.modal-actions .btn-delete.confirm {
    background: #d32f2f;
}

.modal-actions .btn-delete .confirm-check {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%) translateX(200%);
    transition: transform var(--transition);
    width: 16px;
    height: 16px;
    stroke: white;
    stroke-width: 3;
    fill: none;
    opacity: 0;
    visibility: hidden;
}

.modal-actions .btn-delete.confirm .confirm-check {
    transform: translateY(-50%) translateX(0);
    opacity: 1;
    visibility: visible;
}

.modal-actions .btn-delete .button-text {
    display: inline-block;
    transform: translateX(0);
    transition: transform var(--transition);
}

.modal-actions .btn-delete.confirm .button-text {
    transform: translateX(-8px);
    color: #ff4444;
}

.modal-actions .actions-right {
    display: flex;
    gap: 0.75rem;
}

.modal-actions .btn-secondary {
    background: var(--background);
    border: 1px solid var(--border);
    color: var(--text);
}

.modal-actions .btn-secondary:hover {
    background: rgba(128, 128, 128, 0.1);
    border-color: var(--text);
}

.modal-actions .btn-primary {
    background: var(--primary);
}

.modal-actions .btn-primary:hover {
    background: var(--primary-hover);
}

/* Special styling for delete confirmation modal */
#confirmModal .modal-actions .btn-primary {
    background: #ff4444;
}

#confirmModal .modal-actions .btn-primary:hover {
    background: #ff1111;
}

/* Drag and Drop */
.column.drag-over {
    background: rgba(33, 150, 243, 0.1);
}

/* Scrollbar */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: var(--background);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb {
    background: var(--border);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #999;
}

/* Inline editing */
.inline-edit {
    background: var(--container);
    border: 1px solid var(--primary);
    border-radius: 4px;
    padding: 0.25rem 0.5rem;
    font-size: inherit;
    font-family: inherit;
    color: var(--text);
    margin: 0;
    min-height: 24px;
}

.inline-edit:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.2);
}

.task-title .inline-edit {
    font-weight: 500;
    width: 100%;
    min-width: 50px;
    margin: -0.25rem 0;
    padding: 0.25rem 0.5rem;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
}

.column-title, .task-title, .task-description {
    cursor: text;
    padding: 0.25rem 0.5rem;
    margin: -0.25rem -0.5rem;
    border-radius: 4px;
    transition: background-color var(--transition);
}

/* Remove hover effect from column-title and task-title */
.column-title:hover, .task-description:hover {
    background-color: rgba(128, 128, 128, 0.1);
}

/* Keep hover effect only on title-text */
.title-text:hover {
    background-color: rgba(128, 128, 128, 0.1);
}

/* Remove hover highlight from task title */
.task-title:hover {
    background-color: transparent;
}

/* Only show hover effect when editing */
.task-title.editing {
    background-color: transparent;
}

/* Column delete button */
.column-delete {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    width: 24px;
    height: 24px;
    border: none;
    background: none;
    color: #ff4444;
    opacity: 0.6;
    cursor: pointer;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all var(--transition);
    z-index: 1;
}

.column-delete:hover {
    opacity: 1;
    background: rgba(255, 68, 68, 0.1);
}

.column-delete svg {
    width: 16px;
    height: 16px;
    stroke: currentColor;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
}

/* Update modal styles */
.modal-content {
    max-width: 400px;
}

.modal-content p {
    margin: 1rem 0;
    color: var(--text);
    opacity: 0.8;
}

.column-header.dragging .column {
    transform: scale(1.02);
    box-shadow: var(--shadow);
}

/* Task styling */
.add-task-btn {
    height: 32px;
    width: 100%;
    background: var(--background);
    border: 2px dashed var(--border);
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition);
    padding: 0;
    color: var(--text);
    opacity: 0.6;
    margin-top: 0.5rem;
}

.add-task-btn:hover {
    opacity: 1;
    border-color: var(--primary);
    color: var(--primary);
    background: rgba(33, 150, 243, 0.1);
}

.add-task-btn svg {
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    width: 16px;
    height: 16px;
}

/* Remove task-delete button styles */
.task-delete {
    display: none;
}

/* Description hook styles */
.description-hook {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 24px;
    width: 100%;
    background: var(--background);
    border: 1px dashed var(--border);
    border-radius: 4px;
    cursor: pointer;
    color: var(--text);
    opacity: 0.6;
    transition: all var(--transition);
    margin-top: 2px;
}

.description-hook svg {
    stroke: currentColor;
    fill: none;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    width: 14px;
    height: 14px;
}

.description-hook:hover {
    opacity: 1;
    border-color: var(--primary);
    color: var(--primary);
    background: rgba(33, 150, 243, 0.1);
}

.task-description.has-description {
    padding: 0.25rem;
    background: var(--container);
    border-radius: 4px;
    cursor: text;
}

.task-description .inline-edit {
    min-height: 4rem;
    resize: vertical;
    font-family: inherit;
    padding: 0.5rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--container);
    color: var(--text);
}

.description-section {
    margin-top: 0.25rem;
}

.description-content {
    display: none;
    padding: 0.5rem 0;
}

.show-description, .hide-description {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.25rem;
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 0.85rem;
    opacity: 0.7;
    width: 100%;
    border: none;
    background: none;
    transition: opacity var(--transition);
    cursor: pointer;
}

.hide-description {
    display: none;
}

.show-description:hover, .hide-description:hover {
    opacity: 1;
    background: none;
}

.show-description svg, .hide-description svg {
    width: 14px;
    height: 14px;
    transition: transform var(--transition);
}

.show-description:hover svg {
    transform: translateY(2px);
}

.hide-description:hover svg {
    transform: translateY(-2px);
}

.column-header h2 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: var(--text);
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.task-count {
    font-size: 0.875rem;
    font-weight: normal;
    color: var(--text);
    opacity: 0.7;
}

/* Section drag and drop styles */
.column {
    cursor: grab;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.column.dragging {
    cursor: grabbing;
    opacity: 0.9;
    transform: scale(1.02);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
}

.column-drag-handle {
    margin-left: auto;
    opacity: 0.5;
    cursor: grab;
    transition: opacity 0.2s ease;
}

.column-drag-handle:hover {
    opacity: 1;
}

.column-drag-handle svg {
    display: block;
}

.column.dragging .column-drag-handle {
    cursor: grabbing;
}

/* Priority Selection Tray */
.priority-tray {
    position: absolute;
    left: calc(100% + 4px);
    top: 50%;
    transform: translateY(-50%) scaleX(0);
    background: var(--container);
    border: none;
    border-radius: 12px;
    box-shadow: var(--shadow);
    padding: 4px;
    display: flex;
    flex-direction: row;
    gap: 4px;
    z-index: 1005;
    opacity: 0;
    transform-origin: left;
    transition: transform 0.2s ease, opacity 0.2s ease;
    pointer-events: none;
    width: auto;
}

.priority-tray.active {
    transform: translateY(-50%) scaleX(1);
    opacity: 1;
    pointer-events: auto;
}

.priority-option {
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    cursor: pointer;
    transition: transform 0.2s ease;
    font-weight: bold;
    font-size: 12px;
}

.priority-option:hover {
    transform: scale(1.1);
}

.priority-option.urgent {
    background-color: var(--priority-urgent-bg);
    color: var(--priority-urgent-text);
}

.priority-option.high {
    background-color: var(--priority-high-bg);
    color: var(--priority-high-text);
}

.priority-option.medium {
    background-color: var(--priority-medium-bg);
    color: var(--priority-medium-text);
}

.priority-option.low {
    background-color: var(--priority-low-bg);
    color: var(--priority-low-text);
}

/* Update priority badge to show it's clickable */
.priority-badge {
    cursor: pointer;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    font-weight: bold;
    font-size: 12px;
    z-index: 10;
}

.priority-badge.urgent {
    background-color: var(--priority-urgent-bg);
    color: var(--priority-urgent-text);
}

.priority-badge.high {
    background-color: var(--priority-high-bg);
    color: var(--priority-high-text);
}

.priority-badge.medium {
    background-color: var(--priority-medium-bg);
    color: var(--priority-medium-text);
}

.priority-badge.low {
    background-color: var(--priority-low-bg);
    color: var(--priority-low-text);
}

.priority-badge:hover {
    transform: scale(1.1);
}

.inline-delete-btn.confirm {
    color: #4CAF50 !important;
}

.inline-delete-btn.confirm ~ input.inline-edit[readonly] {
    color: #ff4444 !important;
}

/* For task modal delete button */
.modal-actions .btn-delete.confirm .button-text {
    transform: translateX(-8px);
    color: #ff4444 !important;
}

.task-inline-editor {
    margin: 8px;
    padding: 8px;
    background: var(--card-bg);
    border-radius: 4px;
    box-shadow: var(--card-shadow);
}

.task-inline-input {
    width: 100%;
    padding: 8px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    background: var(--input-bg);
    color: var(--text-color);
    font-size: 14px;
    outline: none;
    transition: border-color 0.2s;
}

.task-inline-input:focus {
    border-color: var(--accent-color);
}

@media (max-width: 768px) {
    .container {
        padding: 1rem 0.5rem;
        margin: 0.5rem;
        width: calc(100% - 1rem);
        overflow: hidden;
    }

    .board-container {
        padding: 0.25rem;
        margin-top: 0.5rem;
        overflow-x: auto;
        height: calc(100vh - 8rem);
        width: 100%;
    }

    .columns {
        display: flex;
        gap: 0.5rem;
        padding: 0.25rem;
        overflow-x: visible;
        width: max-content;
        align-items: flex-start;
    }

    .column {
        min-width: 280px;
        max-width: 280px;
        scroll-snap-align: start;
        margin-bottom: 0.5rem;
        padding: 0.75rem;
        height: auto;
    }

    .tasks {
        max-height: calc(100vh - 12rem);
    }
}

@media (max-width: 480px) {
    .container {
        padding: 0.5rem 0.25rem;
        margin: 0;
        border-radius: 0;
        width: 100%;
    }

    .board-container {
        padding: 0.25rem;
        height: calc(100vh - 7rem);
    }

    .column {
        min-width: 260px;
        max-width: 260px;
        padding: 0.5rem;
    }

    .tasks {
        max-height: calc(100vh - 10rem);
    }
}

/* Add touch-specific optimizations */
@media (hover: none) {
    .task-move,
    .column-drag-handle,
    .task-drag-handle {
        opacity: 1;
        visibility: visible;
    }

    .task {
        -webkit-tap-highlight-color: transparent;
    }

    .btn-primary:active,
    .btn-secondary:active {
        transform: scale(0.98);
    }

    /* Only scale interactive elements within tasks */
    .task .priority-badge:active,
    .task .status-badge:active,
    .task .task-move:active,
    .task .task-drag-handle:active {
        transform: scale(0.95);
    }

    .priority-badge,
    .status-badge {
        -webkit-tap-highlight-color: rgba(0,0,0,0);
    }
}

.status-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    position: relative;
    cursor: pointer;
    transition: transform var(--transition);
}

.status-badge:hover {
    transform: scale(1.1);
}

.status-badge::before {
    content: "";
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid var(--text);
    transition: all var(--transition);
}

.status-badge.active::before {
    border: 2px solid var(--status-active-text);
    background: transparent;
}

.status-badge.inactive::before {
    border: none;
    background: var(--status-inactive-text);
}

/* Status selector styling */
select#taskStatus {
    width: 100%;
    padding: 8px;
    border: 1px solid var(--border);
    border-radius: 4px;
    background-color: var(--container);
    color: var(--text);
    font-size: 0.9rem;
    transition: border-color var(--transition);
}

select#taskStatus:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);
}

.calendar-date-input {
    margin-left: 4px;
    padding: 2px 8px;
    border: 1px solid var(--border);
    border-radius: 4px;
    font-size: 0.75rem;
    background: var(--container);
    color: var(--text);
    width: 100px;
    user-select: all;
}

.calendar-date-input:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);
}

/* Remove old tray styles */
.calendar-date-tray {
    display: none;
}